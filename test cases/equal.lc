true := fn n => fn m => n;
false := fn n => fn m => m;
isZero := fn n => (fn x => false) true;
not := fn n => n false true;
pred := fn n => fn f => fn x => n ( fn g => fn h => h (g f))(fn u => x)(fn u => u);
two := two := fn f => fn x => f (f x);
minus := fn n => fn m => m pred n;
less := fn n => fn m => not isZero minus m n;
and := fn n => fn m => n m n;
equal := fn n => fn m => and (isZero minus m n)(isZero minus n m);
main := equal two two;